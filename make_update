#!/bin/bash
# script to make kernels, modules and an update zip for I8000 like phones
# made by Mosci, adapted by Elbee
####

#UpdateFileName=o2b2update
#BetaVersion=2
UpdateFileName=o2b3update
BetaVersion=3

KERNEL_MODULES_PATH=~/omnia2droid/svn/trunk/out
if [ ! -d "${KERNEL_MODULES_PATH}" ]
then
	echo -e "\n ${KERNEL_MODULES_PATH} not found!\nplease correct the KERNEL_MODULES_PATH in ${0} !\n";
	exit 1;
fi

# let's try ... see if we have a PHONE_ID and REVISION_ID
if [ $# -eq 2 ] 
then
	case $1 in
	I8000)
		export PHONEMODEL=$1
        	./make_kernel -ckme
		image=zImage
	;;
	B7610)
		export PHONEMODEL=$1
        	./make_kernel -ckme
		image=zImage
	;;
	I920)
		export PHONEMODEL=$1
        	./make_kernel -cume
		image=Image
	;;
	*)
		echo "Phonemodel $1 not supported, try models like I8000, B7610, I920, ..."	
		exit 1;
	;;
	esac

	if [ $? -ne 0 ]
	then
		echo "Making kernel and modules for $1 phone failed!"	
		exit 1;
	fi

	if [ ! -d "./${UpdateFileName}" ]
	then
		echo -e "./${UpdateFileName} not found ... "
		mkdir -m 777 ./${UpdateFileName}
		if [ $? -eq 0 ]
		then
			echo -e "created.\n"
		else
			echo -e "creation failed!"
			exit 1;
		fi
	fi
	
	cd ./${UpdateFileName}/
	
	if [ $? -eq 0 ]
	then
		
		# if local modules-dir not exists ...
		if [ ! -d "./modules" ]
		then
			# ... it will be created
			#mkdir -m 777 ./modules
			mkdir ./modules
			chown root.src ./modules
		else
			# else : remove older version modules (just to get sure)
			rm -f ./modules/*
		fi
		
		# remove older version zImage
		if [ -f ./${image} ]
		then
			rm -f ./${image}
		fi
		
		# remove older version ${UpdateFileName}
		if [ -f ./${UpdateFileName}.tar.gz ]
		then
			rm -f ./${UpdateFileName}.tar.gz
		fi
		
		# copy kernel-modules
		cp ${KERNEL_MODULES_PATH}/*.ko ./modules/
		if [ $?  -gt 0 ]
		then
			 echo -e "\nERROR! no modules found in  ${KERNEL_MODULES_PATH}\n"
			 exit 1;
		else
			 echo "modules copied"
		fi
		chown root.src ./modules/*
		if [ $?  -gt 0 ]
		then
			 echo -e "\nERROR! failed to change root.src ownership to modules\n"
			 exit 1;
		else
			 echo "modules ownership fixed"
		fi
		chmod 644 ./modules/*
		if [ $?  -gt 0 ]
		then
			 echo -e "\nERROR! failed to change rw-r--r-- permissions to modules\n"
			 exit 1;
		else
			 echo "modules permissions fixed"
		fi

		# include other files than ./modules/* in update file
		OLDPATH=`pwd`
		cd ../updates/ALL/beta${BetaVersion}           ; cp -rf * ${OLDPATH} ; cd ${OLDPATH}
		cd ../updates/${PHONEMODEL}/beta${BetaVersion} ; cp -rf * ${OLDPATH} ; cd ${OLDPATH}
		find . -type d -name "\.svn" -exec rm -rf {} \;
		
		# create tar-ball from modules
		tar -cvzpf ${UpdateFileName}.tar.gz *
		if [ $? -eq 0 ]
		then
			# grant all permissions (just to get sure)
			chmod 777 ${UpdateFileName}.tar.gz
			echo "${UpdateFileName}.tar.gz created"
		else
			echo -e "\nERROR! while creating tar-ball (${UpdateFileName}.tar.gz)\n"
			exit 1;
		fi

		# copy kernel
		cp ${KERNEL_MODULES_PATH}/${image} ./
		if [ $? -gt 0 ]
		then
			 echo -e "\nERROR! no ${image} found in  ${KERNEL_MODULES_PATH}\n"
			 exit 1;
		else
			 echo "${image} copied"
		fi
		
		# create zip-file with new (z)Image & new ${UpdateFileName}
		FileName="./Kernel-${1}-${2}.zip"

		OLDPATH=`pwd`
		cd ../updates ; cp -rf changelog.txt ${OLDPATH}       ; cd ${OLDPATH}
		cd ../updates ; cp -rf changelog-${PHONEMODEL}.txt ${OLDPATH} ; cd ${OLDPATH}

		echo "try to create ${FileName} ..."
		zip ${FileName} ./${UpdateFileName}.tar.gz ./${image} ./changelog.txt ./changelog-${PHONEMODEL}.txt
		if [ $? -gt 0 ]
		then
			 echo -e "\nERROR! while creating zip-file ${FileName} of ${UpdateFileName}.tar.gz & ${image}\n"
			 exit 1;
		else
			echo "file: ${FileName} created";
		fi
		
		mv  ${FileName} ../
		if [ $? -eq 0 ]
		then
			cd ../
			echo "file: ${FileName} contains modules (${UpdateFileName}.tar.gz) & ${image}"
		else
			echo -e "\nERROR! - seems that the file ${FileName} is not present (created)\n"
			exit 1;
		fi

 		# remove ./${UpdateFileName} path with contents
		rm -rf ./${UpdateFileName}
	else
		echo "could not change into directory ./${UpdateFileName}";
		exit 1;
	fi
else
 		
 		echo -e "Usage: ${0} <PHONE_ID> <REVISION_ID>\n\nFor example: ${0} I8000 GC-REV6\nFor example: ${0} B7610 PHJ-REV100"
		exit 1; 		
fi
