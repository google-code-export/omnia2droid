

static int omnia_II_sleep_gpio_table[][6] = {
	/** ALIVE PART **/
	/* GPK */
	{ GPIO_CAM_EN, GPIO_CAM_EN_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_AUDIO_EN, GPIO_AUDIO_EN_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_PHONE_RST_N, GPIO_PHONE_RST_N_AF, GPIO_LEVEL_HIGH, S3C_GPIO_PULL_NONE, 0, 0 }, 
#if 1  // #if 0  Enable anykey wakeup      
	{ GPIO_KBR0, 0, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_KBR1, 0, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, 0, 0 },
	{ GPIO_KBR2, 0, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, 0, 0 }, 
#endif
	{ GPIO_FM_nRST, GPIO_FM_nRST_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_CAM_CIF_nRST, 1, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_CAM_CIF_nSTBY, 1, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 

//	{ GPIO_MSENSE_RST, GPIO_MSENSE_RST_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, // can be good
	{ GPIO_VREG_MSMP_26V, GPIO_VREG_MSMP_26V_AF, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, 0, 0 }, 

	/* GPL */
	{ GPIO_KBC0, 1, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_KBC1, 1, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_KBC1, 1, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_PHONE_ON, GPIO_PHONE_ON_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_TA_nCONNECTED, GPIO_TA_nCONNECTED_AF, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_USIM_BOOT, GPIO_USIM_BOOT_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_CAM_3M_nSTBY, 0, GPIO_LEVEL_NONE, S3C_GPIO_PULL_DOWN, 0, 0 }, 
//	{ GPIO_MIC_SEL, GPIO_MIC_SEL_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, // can be good
	{ GPIO_FM_INT, 0, GPIO_LEVEL_NONE, S3C_GPIO_PULL_DOWN, 0, 0 }, 
	{ GPIO_VIB_EN, GPIO_VIB_EN_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
//	{ GPIO_ALS_EN, GPIO_ALS_EN_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, //bss

	/* GPM */
	{ GPIO_FM_SCL, 0, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_FM_SDA, 0, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_TA_nCHG, GPIO_TA_nCHG_AF, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_PDA_ACTIVE, GPIO_PDA_ACTIVE_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, 
	{ GPIO_nPOWER, GPIO_nPOWER_AF, GPIO_LEVEL_LOW, S3C_GPIO_PULL_UP, 0, 0 }, 
//	{ GPIO_PS_VOUT, 1, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, //bss úgy néz ki, hogy amikor lehúzom bejön az interrutp
//	{ GPIO_AMBIENT_INT_N, 1, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, 0, 0 }, //bss

	/* GPN */ 

	/** MEMORY PART **/
	/* GPO to check */
	{ GPIO_LCD_RST_N, GPIO_LCD_RST_N_AF, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, S3C_GPIO_SLP_OUT0, S3C_GPIO_PULL_NONE },
	{ GPIO_LCD_CS_N, GPIO_LCD_CS_N_AF, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, S3C_GPIO_SLP_OUT0, S3C_GPIO_PULL_NONE },
	{ GPIO_LCD_SDI, GPIO_LCD_SDI_AF, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, S3C_GPIO_SLP_OUT0, S3C_GPIO_PULL_NONE },
	{ GPIO_LCD_ID, GPIO_LCD_ID_AF, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, S3C_GPIO_SLP_INPUT, S3C_GPIO_PULL_NONE },
	{ GPIO_LCD_SCLK, GPIO_LCD_SCLK_AF, GPIO_LEVEL_NONE, S3C_GPIO_PULL_NONE, S3C_GPIO_SLP_OUT0, S3C_GPIO_PULL_NONE },

	/* GPP */
	#define MEM0_OEata 2	//MEM0_OEata controled by MEM0CONSLP1
	{ GPIO_PS_HOLD_PDA, MEM0_OEata, GPIO_LEVEL_LOW, S3C_GPIO_PULL_NONE, S3C_GPIO_SLP_OUT1, S3C_GPIO_PULL_NONE }, 
};


